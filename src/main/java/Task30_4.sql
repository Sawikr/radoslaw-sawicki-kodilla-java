CREATE TABLE IF NOT EXISTS BOOKS_AUD (
    EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
    EVENT_DATE DATETIME DEFAULT NULL,
    EVENT_TYPE VARCHAR(10) DEFAULT NULL,

    BOOK_ID INT(11) NOT NULL,
    OLD_TITLE varchar(255) DEFAULT '0' NOT NULL,
    NEW_TITLE varchar(255) DEFAULT '0' NOT NULL,
    OLD_PUBYEAR int(4) DEFAULT '0000' NOT NULL,
    NEW_PUBYEAR int(4) DEFAULT '0000' NOT NULL,
    OLD_BESTSELLER tinyint(1) default 0 null,
    NEW_BESTSELLER tinyint(1) default 0 null,

    PRIMARY KEY (EVENT_ID)
);

DELIMITER $$

DROP TRIGGER BOOKS_INSERT;

CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
        VALUE(CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$

DELIMITER ;

INSERT INTO BOOKS (BOOK_ID, TITLE, PUBYEAR, BESTSELLER)
VALUES (6, 'SPRING', 1993, 1);

COMMIT;

SELECT * FROM BOOKS_AUD;

DELIMITER $$

DROP TRIGGER BOOKS_DELETE;

CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
        VALUE(CURTIME(), 'DELETE', OLD.BOOK_ID);
END $$

DELIMITER ;

DELETE FROM BOOKS WHERE BOOK_ID = 6;

COMMIT;

SELECT * FROM BOOKS_AUD;

DELIMITER $$

DROP TRIGGER BOOKS_UPDATE;

CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR,
                           OLD_TITLE, OLD_PUBYEAR)
        VALUE(CURTIME(), 'UPDATE', OLD.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, OLD.TITLE, OLD.PUBYEAR);
END $$

DELIMITER ;

UPDATE BOOKS SET PUBYEAR = CURDATE()
    WHERE BOOK_ID = 5;

COMMIT;

SELECT * FROM BOOKS_AUD;

#---

CREATE TABLE IF NOT EXISTS READERS_AUD (
    EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
    EVENT_DATE DATETIME DEFAULT NULL,
    EVENT_TYPE VARCHAR(10) DEFAULT NULL,

    READER_ID INT(11) NOT NULL,
    OLD_FIRSTNAME varchar(255) DEFAULT '0' NOT NULL,
    NEW_FIRSTNAME varchar(255) DEFAULT '0' NOT NULL,
    OLD_LASTNAME varchar(255) DEFAULT '0' NOT NULL,
    NEW_LASTNAME varchar(255) DEFAULT '0' NOT NULL,
    OLD_PESELID varchar(11) DEFAULT '0' NOT NULL,
    NEW_PESELID varchar(11) DEFAULT '0' NOT NULL,

    PRIMARY KEY (EVENT_ID)
);

DELIMITER $$

DROP TRIGGER READERS_INSERT;

CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID)
        VALUE(CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID);
END $$

DELIMITER ;

INSERT INTO READERS (READER_ID, FIRSTNAME, LASTNAME, PESELID)
VALUES (6, 'Radek', 'Sawicki', '80081409556');

SELECT * FROM READERS_AUD;

DELIMITER $$

DROP TRIGGER READERS_DELETE;

CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
        VALUE(CURTIME(), 'DELETE', OLD.READER_ID);
END $$

DELIMITER ;

DELETE FROM READERS WHERE READER_ID = 6;

COMMIT;

SELECT * FROM READERS_AUD;

DELIMITER $$

DROP TRIGGER READERS_UPDATE;

CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID,
                             OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID)
        VALUE(CURTIME(), 'UPDATE', OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID,
				OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID);
END $$

DELIMITER ;

UPDATE READERS SET PESELID = '76081409269'
    WHERE READER_ID = 5;

COMMIT;

SELECT * FROM READERS_AUD;